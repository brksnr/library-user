{
	"info": {
		"_postman_id": "bd63371f-3205-478a-8c9d-6930f01b6a82",
		"name": "Library Managment",
		"description": "# About this collection\n\nPostman allows you to test your APIs using simple Javascript code. You can evaluate your response body, headers, cookies, and more using the [ChaiJS BDD](https://www.chaijs.com/api/bdd/) syntax.\n\nThis collection guides you through the process of setting up an integration test to ensure that all individual components of an API function together seamlessly.\n\nThe API under test in this collection includes three endpoints for registering and receiving a token, accessing your unique generated name, and unregistering a token:\n\n- POST `/register`\n    \n- POST `/unregister`\n    \n- GET `/my-name`\n    \n\nBy setting up requests in the order of the operation, we can test the flow of data to and from the endpoints and ensure they work together as expected. We also verify that the data persists between requests on the back end.\n\n## **Using this collection**\n\n**Step 1:** Check out the requests' documentation to learn more about -\n\n- what each request is meant to do.\n    \n- the tests we've added against each one.\n    \n\n**Step 2:** Run this collection by clicking on \"Run\".\n\n<img src=\"https://content.pstmn.io/84019b0f-69c8-4c5f-98b9-2c90a6f9a0b1/Y29sbGVjdGlvbi1ydW5uZXItYnV0dG9uLmpwZWc=\" width=\"266\" height=\"103\">\n\n**Step 3:** To customize this collection, replace the request URLs with your API endpoints and add or edit the tests if needed.\n\n## Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39173209",
		"_collection_link": "https://berk00.postman.co/workspace/d513376e-6d93-413c-baed-19f4b20da064/collection/39173209-bd63371f-3205-478a-8c9d-6930f01b6a82?action=share&source=collection_link&creator=39173209"
	},
	"item": [
		{
			"name": "Book Service",
			"item": [
				{
					"name": "CreateBook",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"An access token is returned\", () => {",
									"    pm.expect(pm.response.json()).to.have.property('token')",
									"    pm.expect(pm.response.json().token).to.be.a('string')",
									"    // Set the collection-scope \"token\" variable to the token received from the API",
									"    // This lets us use it in other requests",
									"    pm.collectionVariables.set('token', pm.response.json().token)",
									"})",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDcwODMwMDIsImV4cCI6MTc1MDMyMzAwMn0.wsMxmvQ4aLeIA2SRtwJQNTj1dyyz_SX4-bO-Lc6Ugic",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "token",
								"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VySWQiOjIyLCJpYXQiOjE3MzAyODM2MjIsImV4cCI6MTczMTkyNTIyMn0.2DeSy4C2mlPJjTqd9yUX69YY0idEQE9zodLCA3ebnBE",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"final\",\r\n  \"author\": \"final\",\r\n  \"isbn\": \"9780132332323\",\r\n  \"description\" : \"final description\",\r\n  \"publicationDate\": \"2008-08-01\",\r\n  \"genre\": \"Yaz覺l覺m\",\r\n  \"availability\" : true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/books",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"books"
							]
						},
						"description": "This returns a `token` that you can use to retrieve information later on.\n\nWe have included a test to confirm if a token is returned. We have also added test scripts to copy the token to the `token` collection variable. This makes it easy for us to reuse this token in other requests in the collection."
					},
					"response": []
				},
				{
					"name": "Get Book By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"A name is returned\", () => {",
									"    pm.expect(pm.response.json()).to.have.property('name');",
									"    pm.expect(pm.response.json().name).to.be.a('string');",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDY5NzM1NTIsImV4cCI6MTc0NzMzMzU1Mn0.MWZm-sK61YIIXXODsz3XcPVDhH16mFJeaZB2BSNmb_8",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/books/fd337c79-0541-4455-a830-5fc4483c429f",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"books",
								"fd337c79-0541-4455-a830-5fc4483c429f"
							]
						},
						"description": "This request uses the saved `token` collection variable to access a secret 'name' stored against that token.\n\nIn this request, we used the `token` collection variable as a query param to fetch the name generated for that token. We have added a test to check that a name is correctly returned."
					},
					"response": []
				},
				{
					"name": "Get Book By Isbn",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDY5NzM1NTIsImV4cCI6MTc0NzMzMzU1Mn0.MWZm-sK61YIIXXODsz3XcPVDhH16mFJeaZB2BSNmb_8",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/books/isbn/9780132350887",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"books",
								"isbn",
								"9780132350887"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Book",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDcwODQ5ODQsImV4cCI6MTc1MDMyNDk4NH0.DK1hP5CqdV_JkBZtJCgy4YhOSyrcCB_0LuLcMnd_118",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/books/b89a5ba9-fe84-475f-ac22-51ba8133c7b1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"books",
								"b89a5ba9-fe84-475f-ac22-51ba8133c7b1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Book",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDY5NzM1NTIsImV4cCI6MTc0NzMzMzU1Mn0.MWZm-sK61YIIXXODsz3XcPVDhH16mFJeaZB2BSNmb_8",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"updated final\",\r\n  \"author\": \"updated final\",\r\n  \"isbn\": \"9780132350892\",\r\n  \"description\" : \"final description updaet\",\r\n  \"publicationDate\": \"2008-08-01\",\r\n  \"genre\": \"updated Yaz覺l覺m\",\r\n  \"availability\" : true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/books/e90fddcc-2bd0-46c0-9e7c-e1ff9bce7439",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"books",
								"e90fddcc-2bd0-46c0-9e7c-e1ff9bce7439"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Availability",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDY5NzM1NTIsImV4cCI6MTc0NzMzMzU1Mn0.MWZm-sK61YIIXXODsz3XcPVDhH16mFJeaZB2BSNmb_8",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/books/fd337c79-0541-4455-a830-5fc4483c429f/availability/true",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"books",
								"fd337c79-0541-4455-a830-5fc4483c429f",
								"availability",
								"true"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Book Service (Reactive)",
			"item": [
				{
					"name": "Get Book By Title",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Returns 200 OK status\", () => {",
									"    pm.response.to.have.status(200)",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDcwOTI5OTAsImV4cCI6MTc1MDMzMjk5MH0.y6bpISQZq0EJyB2jdXbBPzXOgsk8b3kASrwJ-stsMUo",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/reactive/books/search/title/test?page=0&size=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"reactive",
								"books",
								"search",
								"title",
								"test"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						},
						"description": "This request un-registers a token by using the token collection variable in the POST body.\n\nWe also added a test to ensure the response has a 200 OK status code."
					},
					"response": []
				},
				{
					"name": "Get Book By Author",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDcwOTI5OTAsImV4cCI6MTc1MDMzMjk5MH0.y6bpISQZq0EJyB2jdXbBPzXOgsk8b3kASrwJ-stsMUo",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/reactive/books/search/author/test?page=0&size=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"reactive",
								"books",
								"search",
								"author",
								"test"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Book By Genre",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDY5NzM1NTIsImV4cCI6MTc0NzMzMzU1Mn0.MWZm-sK61YIIXXODsz3XcPVDhH16mFJeaZB2BSNmb_8",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/reactive/books/search/genre/yaz覺l覺m?page=0&size=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"reactive",
								"books",
								"search",
								"genre",
								"yaz覺l覺m"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Check Availability",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDY5NzM1NTIsImV4cCI6MTc0NzMzMzU1Mn0.MWZm-sK61YIIXXODsz3XcPVDhH16mFJeaZB2BSNmb_8",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/reactive/books/search/availability/true?page=1&size=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"reactive",
								"books",
								"search",
								"availability",
								"true"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Borrowing Service",
			"item": [
				{
					"name": "Get User Borrowing History",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhZG1pbkBleGFtcGxlLmNvbSIsImlhdCI6MTc0NzA1NDYyOSwiZXhwIjoxNzQ3NDE0NjI5fQ.uBuS9TMQoACgydhOsZda9GAfyayTJbXvcA7PR8mAPks",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/borrowings/history/user/0/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"borrowings",
								"history",
								"user",
								"0",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Return Book",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwYXRyb25AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDY4ODIyMTIsImV4cCI6MTc0NzI0MjIxMn0.3SJfLVc2ZJT8YiHtiXcW75L1u0i7h2Ojoka96GVwjR0",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\" : \"d91e962c-1ff4-450e-8133-ac6c05becbed\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/borrowings/return/bd50f310-dc10-44f9-94d8-7538fd138b09",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"borrowings",
								"return",
								"bd50f310-dc10-44f9-94d8-7538fd138b09"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET ALL BORROWING HISTORY",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDcwOTIwODIsImV4cCI6MTc1MDMzMjA4Mn0.5oyih68LIJNyipQFxz_j9FWgo3a9VLxuWsO3DXWfdqQ",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/borrowings/history/all",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"borrowings",
								"history",
								"all"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get OverDue Books",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDY5NzM1NTIsImV4cCI6MTc0NzMzMzU1Mn0.MWZm-sK61YIIXXODsz3XcPVDhH16mFJeaZB2BSNmb_8",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/borrowings/overdue/page/0/size/10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"borrowings",
								"overdue",
								"page",
								"0",
								"size",
								"10"
							]
						}
					},
					"response": []
				},
				{
					"name": "Borrow Book",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJwYXRyb25AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDcwOTI1ODYsImV4cCI6MTc1MDMzMjU4Nn0.bdDblq1aqV3sONzaczwrFZIiEeHWgoSAwPChylzgYYo",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"userId\" : \"d91e962c-1ff4-450e-8133-ac6c05becbed\",\r\n    \"bookId\" : \"36d7388c-7e7f-4851-901b-45eb3d59ae11\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/borrowings/borrow",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"borrowings",
								"borrow"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Service",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"final\",\r\n    \"email\": \"final@example.com\",\r\n    \"password\": \"test\",\r\n    \"contact\": \"555-123-4567\",\r\n    \"role\": \"PATRON\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"librarian@example.com\",\r\n    \"password\" : \"test\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Users (LIBRARY)",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDcwODQ5ODQsImV4cCI6MTc1MDMyNDk4NH0.DK1hP5CqdV_JkBZtJCgy4YhOSyrcCB_0LuLcMnd_118",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDcwODQ5ODQsImV4cCI6MTc1MDMyNDk4NH0.DK1hP5CqdV_JkBZtJCgy4YhOSyrcCB_0LuLcMnd_118",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"update admin(patron)\",\r\n    \"email\": \"updatedpatrohn@example.com\",\r\n    \"password\": \"test\",\r\n    \"contact\": \"555-123-4567\",\r\n    \"role\": \"PATRON\",\r\n    \"borrowedBookCount\" : 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/auth/4955aae0-064e-4425-a999-163efd52f071",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"4955aae0-064e-4425-a999-163efd52f071"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJsaWJyYXJpYW5AZXhhbXBsZS5jb20iLCJpYXQiOjE3NDcwODQ5ODQsImV4cCI6MTc1MDMyNDk4NH0.DK1hP5CqdV_JkBZtJCgy4YhOSyrcCB_0LuLcMnd_118",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/auth/ea1d84dc-8d51-403e-b894-bf2852490bf1",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"auth",
								"ea1d84dc-8d51-403e-b894-bf2852490bf1"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://postman-integration-testing.glitch.me/"
		}
	]
}